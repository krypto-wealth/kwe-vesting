/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Presale, PresaleInterface } from "../Presale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "investToken_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "startTimestamp_",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "duration_",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint240",
            name: "hardcap",
            type: "uint240",
          },
          {
            internalType: "uint16",
            name: "price",
            type: "uint16",
          },
        ],
        internalType: "struct Presale.RoundInfo[]",
        name: "rounds_",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HardcapAccomplished",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectStartTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "PresaleNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroInvest",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroRounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "roundId",
        type: "uint8",
      },
    ],
    name: "Invested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint240",
            name: "hardcap",
            type: "uint240",
          },
          {
            internalType: "uint16",
            name: "price",
            type: "uint16",
          },
        ],
        internalType: "struct Presale.RoundInfo[]",
        name: "rounds_",
        type: "tuple[]",
      },
    ],
    name: "addRounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
    ],
    name: "getUserAllocations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "allocations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
    ],
    name: "getUserInvestmentInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "roundId",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "amount",
            type: "uint216",
          },
        ],
        internalType: "struct Presale.InvestInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "roundId_",
        type: "uint8",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investTokenReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "roundTotalInvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint240",
        name: "hardcap",
        type: "uint240",
      },
      {
        internalType: "uint16",
        name: "price",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
    ],
    name: "setReceiverWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalInvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620018c1380380620018c183398101604081905262000034916200040c565b6200003f33620001bb565b6001600160a01b03861615806200005d57506001600160a01b038116155b806200007057506001600160a01b038216155b156200008f5760405163d92e233d60e01b815260040160405180910390fd5b428563ffffffff161015620000b75760405163513e936960e11b815260040160405180910390fd5b8251600003620000da5760405163065e270360e51b815260040160405180910390fd5b8363ffffffff16600003620001025760405163346ab43760e11b815260040160405180910390fd5b6001600160a01b0386811660805263ffffffff86811660a052851660c052600280546001600160a01b03191691841691909117905560005b8351811015620001a35760018482815181106200015b576200015b620004c0565b6020908102919091018101518254600181810185556000948552938390208251929093015161ffff16600160f01b026001600160f01b0390921691909117910155016200013a565b50620001af81620001bb565b505050505050620004d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b62000229816200020b565b81146200023557600080fd5b50565b805162000218816200021e565b63ffffffff811662000229565b8051620002188162000245565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156200029d576200029d6200025f565b6040525050565b6000620002b060405190565b9050620002be828262000275565b919050565b60006001600160401b03821115620002df57620002df6200025f565b5060209081020190565b6001600160f01b03811662000229565b80516200021881620002e9565b61ffff811662000229565b8051620002188162000306565b600060408284031215620003355762000335600080fd5b620003416040620002a4565b90506000620003518484620002f9565b8252506020620003648484830162000311565b60208301525092915050565b6000620003876200038184620002c3565b620002a4565b83815290506020810160408402830185811115620003a857620003a8600080fd5b835b81811015620003d25780620003c088826200031e565b845250602090920191604001620003aa565b5050509392505050565b600082601f830112620003f257620003f2600080fd5b81516200040484826020860162000370565b949350505050565b60008060008060008060c087890312156200042a576200042a600080fd5b600062000438898962000238565b96505060206200044b89828a0162000252565b95505060406200045e89828a0162000252565b94505060608701516001600160401b038111156200047f576200047f600080fd5b6200048d89828a01620003dc565b9350506080620004a089828a0162000238565b92505060a0620004b389828a0162000238565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b60805160a05160c0516113a76200051a6000396000818160ff015261040001526000818161027701526103cc01526000818161023001526105ee01526113a76000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063badf822b11610066578063badf822b1461022b578063dd073a0c1461025f578063e6fd48bc14610272578063f2fde38b1461029957600080fd5b80638da5cb5b146101be5780639c932547146101d8578063a2c6d177146101f8578063a518488e1461020b57600080fd5b80635216aeec116100d35780635216aeec1461016c5780635e03b67a14610182578063715018a6146101955780638c65c81f1461019d57600080fd5b80630fb5a6b4146100fa57806317fa0f721461013757806322912cb214610157575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b60405161012e9190610bd4565b60405180910390f35b61014a610145366004610c18565b6102ac565b60405161012e9190610ce5565b61016a610165366004610c18565b610349565b005b61017560035481565b60405161012e9190610cfc565b61016a610190366004610d2f565b6103c5565b61016a61061e565b6101b06101ab366004610d6c565b610654565b60405161012e929190610da6565b6000546001600160a01b03165b60405161012e9190610dca565b6101756101e6366004610dd8565b60046020526000908152604090205481565b61016a610206366004610e4b565b61068a565b61021e610219366004610c18565b61072b565b60405161012e9190610ee5565b6102527f000000000000000000000000000000000000000000000000000000000000000081565b60405161012e9190610f15565b6002546101cb906001600160a01b031681565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b61016a6102a7366004610c18565b610917565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561033e576000848152602090819020604080516060810182529185015460ff81168352610100810463ffffffff16838501526501000000000090046001600160d81b0316908201528252600190920191016102e4565b505050509050919050565b6000546001600160a01b0316331461037c5760405162461bcd60e51b815260040161037390610f58565b60405180910390fd5b6001600160a01b0381166103a35760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b63ffffffff7f0000000000000000000000000000000000000000000000000000000000000000164281118061042857504261042663ffffffff7f00000000000000000000000000000000000000000000000000000000000000001683610f7e565b105b1561044657604051633844da5760e21b815260040160405180910390fd5b82600003610467576040516330be62cd60e11b815260040160405180910390fd5b60018260ff168154811061047d5761047d610f91565b600091825260208083209091015460ff8516835260049091526040909120546001600160f01b03909116906104b3908590610f7e565b11156104d257604051631894575b60e11b815260040160405180910390fd5b82600360008282546104e49190610f7e565b909155505060ff82166000908152600460205260408120805485929061050b908490610f7e565b9091555050336000818152600560209081526040808320815160608101835260ff808916825263ffffffff4281168387019081526001600160d81b03808d168588019081528654600181018855968a5297909820935193909401805494519651909716650100000000000264ffffffffff969091166101000264ffffffffff199094169290911691909117919091179290921691909117909155517f8be001c51fa67bb39d13928f57c4231ab199404a3e3e1de2ff6cd7756bfbba48906105d59086908690610fa7565b60405180910390a2600254610619906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169133911686610973565b505050565b6000546001600160a01b031633146106485760405162461bcd60e51b815260040161037390610f58565b61065260006109d1565b565b6001818154811061066457600080fd5b6000918252602090912001546001600160f01b0381169150600160f01b900461ffff1682565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161037390610f58565b60008190036106d65760405163065e270360e51b815260040160405180910390fd5b60005b818110156106195760018383838181106106f5576106f5610f91565b8354600181018555600094855260209094206040909102929092019291909101905061072182826110b2565b50506001016106d9565b60015460609067ffffffffffffffff811115610749576107496110c0565b604051908082528060200260200182016040528015610772578160200160208202803683370190505b50905060005b6001600160a01b03831660009081526005602052604090205460ff82161015610867576001600160a01b0383166000908152600560205260408120805460ff84169081106107c8576107c8610f91565b60009182526020808320909101546001600160a01b038716835260059091526040909120805460ff92831693509091841690811061080857610808610f91565b9060005260206000200160000160059054906101000a90046001600160d81b03166001600160d81b0316838260ff168151811061084757610847610f91565b6020026020010181815161085b9190610f7e565b90525050600101610778565b5060005b81518160ff1610156109115760018160ff168154811061088d5761088d610f91565b90600052602060002001600001601e9054906101000a900461ffff1661ffff16828260ff16815181106108c2576108c2610f91565b60200260200101516127106108d791906110d6565b6108e1919061110b565b828260ff16815181106108f6576108f6610f91565b602090810291909101015261090a8161111f565b905061086b565b50919050565b6000546001600160a01b031633146109415760405162461bcd60e51b815260040161037390610f58565b6001600160a01b0381166109675760405162461bcd60e51b815260040161037390611182565b610970816109d1565b50565b6109cb846323b872dd60e01b85858560405160240161099493929190611192565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a21565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610a76826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ab09092919063ffffffff16565b8051909150156106195780806020019051810190610a9491906111cd565b6106195760405162461bcd60e51b815260040161037390611235565b6060610abf8484600085610ac9565b90505b9392505050565b606082471015610aeb5760405162461bcd60e51b815260040161037390611288565b6001600160a01b0385163b610b125760405162461bcd60e51b8152600401610373906112cc565b600080866001600160a01b03168587604051610b2e9190611322565b60006040518083038185875af1925050503d8060008114610b6b576040519150601f19603f3d011682016040523d82523d6000602084013e610b70565b606091505b5091509150610b80828286610b8d565b925050505b949350505050565b60608315610b9c575081610ac2565b825115610bac5782518084602001fd5b8160405162461bcd60e51b81526004016103739190611360565b63ffffffff81165b82525050565b60208101610be28284610bc6565b92915050565b60006001600160a01b038216610be2565b610c0281610be8565b811461097057600080fd5b8035610be281610bf9565b600060208284031215610c2d57610c2d600080fd5b6000610b858484610c0d565b60ff8116610bce565b6001600160d81b038116610bce565b80516060830190610c628482610c39565b506020820151610c756020850182610bc6565b5060408201516109cb6040850182610c42565b6000610c948383610c51565b505060600190565b6000610ca6825190565b80845260209384019383018060005b83811015610cda578151610cc98882610c88565b975060208301925050600101610cb5565b509495945050505050565b60208082528101610ac28184610c9c565b80610bce565b60208101610be28284610cf6565b80610c02565b8035610be281610d0a565b60ff8116610c02565b8035610be281610d1b565b60008060408385031215610d4557610d45600080fd5b6000610d518585610d10565b9250506020610d6285828601610d24565b9150509250929050565b600060208284031215610d8157610d81600080fd5b6000610b858484610d10565b6001600160f01b038116610bce565b61ffff8116610bce565b60408101610db48285610d8d565b610ac26020830184610d9c565b610bce81610be8565b60208101610be28284610dc1565b600060208284031215610ded57610ded600080fd5b6000610b858484610d24565b60008083601f840112610e0e57610e0e600080fd5b50813567ffffffffffffffff811115610e2957610e29600080fd5b602083019150836040820283011115610e4457610e44600080fd5b9250929050565b60008060208385031215610e6157610e61600080fd5b823567ffffffffffffffff811115610e7b57610e7b600080fd5b610e8785828601610df9565b92509250509250929050565b6000610e9f8383610cf6565b505060200190565b6000610eb1825190565b80845260209384019383018060005b83811015610cda578151610ed48882610e93565b975060208301925050600101610ec0565b60208082528101610ac28184610ea7565b6000610be282610be8565b6000610be282610ef6565b610bce81610f01565b60208101610be28284610f0c565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610be281610f23565b634e487b7160e01b600052601160045260246000fd5b80820180821115610be257610be2610f68565b634e487b7160e01b600052603260045260246000fd5b60408101610fb58285610cf6565b610ac26020830184610c39565b6001600160f01b038116610c02565b60008135610be281610fc2565b60006001600160f01b03835b81169019929092169190911792915050565b60006001600160f01b038216610be2565b61101682610ffc565b611021818354610fde565b8255505050565b61ffff8116610c02565b60008135610be281611028565b60006001600160f01b0319610fea8460f01b90565b600061ffff8216610be2565b61106982611054565b61102181835461103f565b80828061108081610fd1565b905061108c818461100d565b5082915050602083018061109f81611032565b90506110ab8184611060565b5050505050565b6110bc8282611074565b5050565b634e487b7160e01b600052604160045260246000fd5b8181028082158382048514176110ee576110ee610f68565b5092915050565b634e487b7160e01b600052601260045260246000fd5b60008261111a5761111a6110f5565b500490565b60ff16600060fe19820161113557611135610f68565b5060010190565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291505b5060400190565b60208082528101610be28161113c565b606081016111a08286610dc1565b6111ad6020830185610dc1565b610b856040830184610cf6565b801515610c02565b8051610be2816111ba565b6000602082840312156111e2576111e2600080fd5b6000610b8584846111c2565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b6020820152915061117b565b60208082528101610be2816111ee565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b6020820152915061117b565b60208082528101610be281611245565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150610f51565b60208082528101610be281611298565b60005b838110156112f75781810151838201526020016112df565b50506000910152565b600061130a825190565b6113188185602086016112dc565b9290920192915050565b6000610ac28284611300565b6000611338825190565b80845260208401935061134f8185602086016112dc565b601f01601f19169290920192915050565b60208082528101610ac2818461132e56fea26469706673582212208a1c213816b935963e76bf07780143b6266de9e398544aef5487e1bae128bf1e64736f6c63430008120033";

export class Presale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    investToken_: string,
    startTimestamp_: BigNumberish,
    duration_: BigNumberish,
    rounds_: { hardcap: BigNumberish; price: BigNumberish }[],
    receiver_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Presale> {
    return super.deploy(
      investToken_,
      startTimestamp_,
      duration_,
      rounds_,
      receiver_,
      owner_,
      overrides || {}
    ) as Promise<Presale>;
  }
  getDeployTransaction(
    investToken_: string,
    startTimestamp_: BigNumberish,
    duration_: BigNumberish,
    rounds_: { hardcap: BigNumberish; price: BigNumberish }[],
    receiver_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      investToken_,
      startTimestamp_,
      duration_,
      rounds_,
      receiver_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): Presale {
    return super.attach(address) as Presale;
  }
  connect(signer: Signer): Presale__factory {
    return super.connect(signer) as Presale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleInterface {
    return new utils.Interface(_abi) as PresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Presale {
    return new Contract(address, _abi, signerOrProvider) as Presale;
  }
}
