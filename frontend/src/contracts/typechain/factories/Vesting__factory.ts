/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Vesting, VestingInterface } from '../Vesting'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'token_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotStarted',
    type: 'error',
  },
  {
    inputs: [],
    name: 'WrongProof',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroClaim',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'roundName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Claim',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'InitializedVesting',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ROOT',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'allocations',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'proof',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint256',
        name: 'targetAmount',
        type: 'uint256',
      },
    ],
    name: 'claimAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'roundId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'allocations',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'proof',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint256',
        name: 'targetAmount',
        type: 'uint256',
      },
    ],
    name: 'claimSingle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'claimed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllocations',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'getRound',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'startTimestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint32',
                name: 'duration',
                type: 'uint32',
              },
              {
                internalType: 'uint32',
                name: 'linearUnits',
                type: 'uint32',
              },
              {
                internalType: 'uint128',
                name: 'percentageD',
                type: 'uint128',
              },
            ],
            internalType: 'struct Vesting.VestingPeriod[]',
            name: 'periods',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Vesting.VestingRound',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRounds',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'startTimestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint32',
                name: 'duration',
                type: 'uint32',
              },
              {
                internalType: 'uint32',
                name: 'linearUnits',
                type: 'uint32',
              },
              {
                internalType: 'uint128',
                name: 'percentageD',
                type: 'uint128',
              },
            ],
            internalType: 'struct Vesting.VestingPeriod[]',
            name: 'periods',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Vesting.VestingRound[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'startTimestamp_',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'leaves_',
        type: 'string',
      },
      {
        internalType: 'bytes32',
        name: 'root_',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            components: [
              {
                internalType: 'uint64',
                name: 'startTimestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint32',
                name: 'duration',
                type: 'uint32',
              },
              {
                internalType: 'uint32',
                name: 'linearUnits',
                type: 'uint32',
              },
              {
                internalType: 'uint128',
                name: 'percentageD',
                type: 'uint128',
              },
            ],
            internalType: 'struct Vesting.VestingPeriod[]',
            name: 'periods',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Vesting.VestingRound[]',
        name: 'rounds_',
        type: 'tuple[]',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'root_',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'leaves_',
        type: 'string',
      },
    ],
    name: 'resetROOT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'rounds',
    outputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'allocation',
        type: 'uint256',
      },
    ],
    name: 'unlocked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200293638038062002936833981016040819052620000349162000112565b6200003f3362000063565b600180556001600160a01b0382166080526200005b8162000063565b505062000155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b6000620000c082620000b3565b620000de81620000c6565b8114620000ea57600080fd5b50565b8051620000c081620000d3565b620000de81620000b3565b8051620000c081620000fa565b600080604083850312156200012a576200012a600080fd5b6000620001388585620000ed565b92505060206200014b8582860162000105565b9150509250929050565b6080516127b76200017f600039600081816102690152818161127b015261144d01526127b76000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638f1327c0116100a2578063ebd2ebb811610071578063ebd2ebb814610218578063ee59fc2d1461022b578063f2fde38b1461023e578063f3fef3a314610251578063fc0c546a1461026457600080fd5b80638f1327c0146101c957806399e075ed146101e9578063bd0d7836146101fc578063e6fd48bc1461020f57600080fd5b80636984d070116100e95780636984d07014610175578063715018a61461018a5780638b649b94146101945780638c65c81f1461019d5780638da5cb5b146101b057600080fd5b8063310f2de61461011b5780634dd6c8de146101445780635909c12f1461015757806365ed6e2314610160575b600080fd5b61012e6101293660046117be565b610298565b60405161013b9190611803565b60405180910390f35b61012e610152366004611836565b61055d565b61012e60045481565b610168610585565b60405161013b91906118ba565b61017d610617565b60405161013b9190611a49565b610192610806565b005b61012e60035481565b6101686101ab366004611a5a565b610845565b6000546001600160a01b031660405161013b9190611a84565b6101dc6101d7366004611a5a565b6108e3565b60405161013b9190611a92565b6101926101f7366004611af4565b610a45565b61019261020a366004611ef7565b610b0e565b61012e60065481565b610192610226366004611f8f565b61103a565b610192610239366004611fdc565b61107a565b61019261024c366004612069565b6111c1565b61019261025f366004611836565b61121d565b61028b7f000000000000000000000000000000000000000000000000000000000000000081565b60405161013b91906120cc565b60008281526002602052604081206001908101549082908180805b858110156104e95760008981526002602052604081206001018054839081106102de576102de6120da565b60009182526020808320909101548c835260029091526040822060010180546001600160401b039092169350908490811061031b5761031b6120da565b6000918252602080832091909101548d83526002909152604082206001018054600160401b90920463ffffffff169350908590811061035c5761035c6120da565b600091825260208220015463ffffffff600160601b9091048116925061038490841685612106565b905042816001600160401b0316116103ea5760008d81526002602052604090206001018054869081106103b9576103b96120da565b6000918252602090912001546103df90600160801b90046001600160801b03168861213e565b9650505050506104d9565b806001600160401b0316846001600160401b03160361042b5760019750836001600160401b0316421061041e576001610421565b60005b60ff16985061048e565b6000846001600160401b0316421115610454576104516001600160401b03861642612171565b90505b61045e858361218c565b6001600160401b031661047763ffffffff8516836121a9565b61048191906121de565b99508263ffffffff169850505b60008d81526002602052604090206001018054869081106104b1576104b16120da565b600091825260209091200154600160801b90046001600160801b031695506104e99350505050565b6104e2816121f2565b90506102b3565b50600083610500670de0b6b3a764000060646121a9565b61050a91906121a9565b61051d866001600160801b0385166121a9565b610530866001600160801b0387166121a9565b61053a919061220c565b610544908a6121a9565b61054e91906121de565b96505050505050505b92915050565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b60606005805461059490612235565b80601f01602080910402602001604051908101604052809291908181526020018280546105c090612235565b801561060d5780601f106105e25761010080835404028352916020019161060d565b820191906000526020600020905b8154815290600101906020018083116105f057829003601f168201915b5050505050905090565b606060006003546001600160401b0381111561063557610635611b94565b60405190808252806020026020018201604052801561067a57816020015b60408051808201909152606080825260208201528152602001906001900390816106535790505b50905060005b600354811015610800576000818152600260205260409081902081518083019092528054829082906106b190612235565b80601f01602080910402602001604051908101604052809291908181526020018280546106dd90612235565b801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156107ca57600084815260209081902060408051608081018252918501546001600160401b038116835263ffffffff600160401b8204811684860152600160601b820416918301919091526001600160801b03600160801b909104166060820152825260019092019101610758565b50505050815250508282815181106107e4576107e46120da565b6020026020010181905250806107f9906121f2565b9050610680565b50919050565b6000546001600160a01b031633146108395760405162461bcd60e51b815260040161083090612290565b60405180910390fd5b61084360006112aa565b565b60026020526000908152604090208054819061086090612235565b80601f016020809104026020016040519081016040528092919081815260200182805461088c90612235565b80156108d95780601f106108ae576101008083540402835291602001916108d9565b820191906000526020600020905b8154815290600101906020018083116108bc57829003601f168201915b5050505050905081565b6040805180820190915260608082526020820152600082815260026020526040808220815180830190925280548290829061091d90612235565b80601f016020809104026020016040519081016040528092919081815260200182805461094990612235565b80156109965780601f1061096b57610100808354040283529160200191610996565b820191906000526020600020905b81548152906001019060200180831161097957829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610a3657600084815260209081902060408051608081018252918501546001600160401b038116835263ffffffff600160401b8204811684860152600160601b820416918301919091526001600160801b03600160801b9091041660608201528252600190920191016109c4565b50505091525090949350505050565b600654421015610a6857604051636f312cbd60e01b815260040160405180910390fd5b6000858533604051602001610a7f939291906122d9565b604051602081830303815290604052805190602001209050610adb600454828686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506112fa9050565b610af85760405163923983b960e01b815260040160405180910390fd5b610b04878787856113aa565b5050505050505050565b6000546001600160a01b03163314610b385760405162461bcd60e51b815260040161083090612290565b6000610b4460016114d2565b90508015610b60576000805460ff60a81b1916600160a81b1790555b841580610b6c57504285105b15610b8a57604051632a9ffab760e21b815260040160405180910390fd5b81516003819055600003610bb15760405163251f56a160e21b815260040160405180910390fd5b60068590556005610bc28582612394565b50600483905560005b600354811015610fb8576000838281518110610be957610be96120da565b60200260200101516020015151905080600003610c195760405163251f56a160e21b815260040160405180910390fd5b838281518110610c2b57610c2b6120da565b6020908102919091018101515160008481526002909252604090912090610c529082612394565b506000805b82811015610f72578015610d6f57858481518110610c7757610c776120da565b602002602001015160200151600182610c909190612171565b81518110610ca057610ca06120da565b60200260200101516020015163ffffffff16868581518110610cc457610cc46120da565b602002602001015160200151600183610cdd9190612171565b81518110610ced57610ced6120da565b6020026020010151600001516001600160401b0316610d0c919061220c565b868581518110610d1e57610d1e6120da565b6020026020010151602001518281518110610d3b57610d3b6120da565b6020026020010151600001516001600160401b03161015610d6f57604051632a9ffab760e21b815260040160405180910390fd5b6000868581518110610d8357610d836120da565b6020026020010151602001518281518110610da057610da06120da565b60200260200101516020015190506000878681518110610dc257610dc26120da565b6020026020010151602001518381518110610ddf57610ddf6120da565b602002602001015160400151905060008263ffffffff16118015610e0e57508063ffffffff168263ffffffff16105b15610e2c57604051632a9ffab760e21b815260040160405180910390fd5b60026000878152602001908152602001600020600101888781518110610e5457610e546120da565b6020026020010151602001518481518110610e7157610e716120da565b60209081029190910181015182546001810184556000938452928290208151930180549282015160408301516060909301516001600160401b039095166bffffffffffffffffffffffff1990941693909317600160401b63ffffffff94851602176bffffffffffffffffffffffff16600160601b93909216929092026001600160801b0390811691909117600160801b91909316029190911790558751889087908110610f2057610f206120da565b6020026020010151602001518381518110610f3d57610f3d6120da565b6020026020010151606001516001600160801b031684610f5d919061220c565b9350505080610f6b906121f2565b9050610c57565b50610f86670de0b6b3a764000060646121a9565b8114610fa557604051632a9ffab760e21b815260040160405180910390fd5b505080610fb1906121f2565b9050610bcb565b50604051339042907fcef184a324e18f1755dfcf0ff1b3c7d6990dfb41078f16c7af262b4720ab09ad90600090a38015611033576000805460ff60a81b191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061102a9060019061246b565b60405180910390a15b5050505050565b6000546001600160a01b031633146110645760405162461bcd60e51b815260040161083090612290565b600482905560056110758282612394565b505050565b60065442101561109d57604051636f312cbd60e01b815260040160405180910390fd5b60008585336040516020016110b4939291906122d9565b604051602081830303815290604052805190602001209050611110600454828686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506112fa9050565b61112d5760405163923983b960e01b815260040160405180910390fd5b8160005b600354811015610b04576000611147338361055d565b611169838b8b8681811061115d5761115d6120da565b90506020020135610298565b6111739190612171565b90508060000361118357506111b1565b6000611191838b8b876113aa565b905061119d8185612171565b9350836000036111ae575050610b04565b50505b6111ba816121f2565b9050611131565b6000546001600160a01b031633146111eb5760405162461bcd60e51b815260040161083090612290565b6001600160a01b0381166112115760405162461bcd60e51b8152600401610830906124bf565b61121a816112aa565b50565b6000546001600160a01b031633146112475760405162461bcd60e51b815260040161083090612290565b6002600154036112695760405162461bcd60e51b815260040161083090612503565b60026001556112a26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383611572565b505060018055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82516000908290825b8181101561139c57600087828151811061131f5761131f6120da565b6020026020010151905080841061135e578084604051602001611343929190612513565b60405160208183030381529060405280519060200120611388565b8381604051602001611371929190612513565b604051602081830303815290604052805190602001205b93505080611395906121f2565b9050611303565b5050831490505b9392505050565b60006002600154036113ce5760405162461bcd60e51b815260040161083090612503565b600260015560006113df338761055d565b6113f58787878a81811061115d5761115d6120da565b6113ff9190612171565b905060008184116114105783611412565b815b905061141f3388836115c8565b80600003611440576040516323f3c4e160e11b815260040160405180910390fd5b6114746001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611572565b6000878152600260205260409081902090519193508391339142917f677a96caf5261823bc89b455735dcce67f76b8c782a3043f070b8c8f8051e3a6916114bc9186906125a8565b60405180910390a3505060018055949350505050565b60008054600160a81b900460ff161561151b578160ff1660011480156114f75750303b155b6115135760405162461bcd60e51b815260040161083090612613565b506000919050565b60005460ff808416600160a01b90920416106115495760405162461bcd60e51b815260040161083090612613565b506000805460ff909216600160a01b0260ff60a01b19909216919091179055600190565b919050565b6110758363a9059cbb60e01b8484604051602401611591929190612623565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611605565b6001600160a01b0383166000908152600760209081526040808320858452909152812080548392906115fb90849061220c565b9091555050505050565b600061165a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116949092919063ffffffff16565b80519091501561107557808060200190518101906116789190612644565b6110755760405162461bcd60e51b8152600401610830906126ac565b60606116a384846000856116ab565b949350505050565b6060824710156116cd5760405162461bcd60e51b8152600401610830906126ff565b6001600160a01b0385163b6116f45760405162461bcd60e51b815260040161083090612743565b600080866001600160a01b031685876040516117109190612775565b60006040518083038185875af1925050503d806000811461174d576040519150601f19603f3d011682016040523d82523d6000602084013e611752565b606091505b509150915061176282828661176d565b979650505050505050565b6060831561177c5750816113a3565b82511561178c5782518084602001fd5b8160405162461bcd60e51b815260040161083091906118ba565b805b811461121a57600080fd5b8035610557816117a6565b600080604083850312156117d4576117d4600080fd5b60006117e085856117b3565b92505060206117f1858286016117b3565b9150509250929050565b805b82525050565b6020810161055782846117fb565b60006001600160a01b038216610557565b6117a881611811565b803561055781611822565b6000806040838503121561184c5761184c600080fd5b60006117e0858561182b565b60005b8381101561187357818101518382015260200161185b565b83811115611882576000848401525b50505050565b6000611892825190565b8084526020840193506118a9818560208601611858565b601f01601f19169290920192915050565b602080825281016113a38184611888565b6001600160401b0381166117fd565b63ffffffff81166117fd565b6001600160801b0381166117fd565b8051608083019061190684826118cb565b50602082015161191960208501826118da565b50604082015161192c60408501826118da565b50606082015161188260608501826118e6565b600061194b83836118f5565b505060800190565b600061195d825190565b80845260209384019383018060005b83811015611991578151611980888261193f565b97506020830192505060010161196c565b509495945050505050565b80516040808452600091908401906119b48282611888565b915050602083015184820360208601526119ce8282611953565b95945050505050565b60006113a3838361199c565b60006119ed825190565b80845260208401935083602082028501611a078560200190565b8060005b85811015611a3c5784840389528151611a2485826119d7565b94506020830160209a909a0199925050600101611a0b565b5091979650505050505050565b602080825281016113a381846119e3565b600060208284031215611a6f57611a6f600080fd5b60006116a384846117b3565b6117fd81611811565b602081016105578284611a7b565b602080825281016113a3818461199c565b60008083601f840112611ab857611ab8600080fd5b5081356001600160401b03811115611ad257611ad2600080fd5b602083019150836020820283011115611aed57611aed600080fd5b9250929050565b60008060008060008060808789031215611b1057611b10600080fd5b6000611b1c89896117b3565b96505060208701356001600160401b03811115611b3b57611b3b600080fd5b611b4789828a01611aa3565b955095505060408701356001600160401b03811115611b6857611b68600080fd5b611b7489828a01611aa3565b93509350506060611b8789828a016117b3565b9150509295509295509295565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611bcf57611bcf611b94565b6040525050565b6000611be160405190565b905061156d8282611baa565b60006001600160401b03821115611c0657611c06611b94565b601f19601f83011660200192915050565b82818337506000910152565b6000611c36611c3184611bed565b611bd6565b905082815260208101848484011115611c5157611c51600080fd5b611c5c848285611c17565b509392505050565b600082601f830112611c7857611c78600080fd5b81356116a3848260208601611c23565b60006001600160401b03821115611ca157611ca1611b94565b5060209081020190565b6001600160401b0381166117a8565b803561055781611cab565b63ffffffff81166117a8565b803561055781611cc5565b6001600160801b0381166117a8565b803561055781611cdc565b600060808284031215611d0b57611d0b600080fd5b611d156080611bd6565b90506000611d238484611cba565b8252506020611d3484848301611cd1565b6020830152506040611d4884828501611cd1565b6040830152506060611d5c84828501611ceb565b60608301525092915050565b6000611d76611c3184611c88565b83815290506020810160808402830185811115611d9557611d95600080fd5b835b81811015611dbb5780611daa8882611cf6565b845250602090920191608001611d97565b5050509392505050565b600082601f830112611dd957611dd9600080fd5b81356116a3848260208601611d68565b600060408284031215611dfe57611dfe600080fd5b611e086040611bd6565b905081356001600160401b03811115611e2357611e23600080fd5b611e2f84828501611c64565b82525060208201356001600160401b03811115611e4e57611e4e600080fd5b611e5a84828501611dc5565b60208301525092915050565b6000611e74611c3184611c88565b83815290506020808201908402830185811115611e9357611e93600080fd5b835b81811015611dbb5780356001600160401b03811115611eb657611eb6600080fd5b808601611ec38982611de9565b8552505060209283019201611e95565b600082601f830112611ee757611ee7600080fd5b81356116a3848260208601611e66565b60008060008060808587031215611f1057611f10600080fd5b6000611f1c87876117b3565b94505060208501356001600160401b03811115611f3b57611f3b600080fd5b611f4787828801611c64565b9350506040611f58878288016117b3565b92505060608501356001600160401b03811115611f7757611f77600080fd5b611f8387828801611ed3565b91505092959194509250565b60008060408385031215611fa557611fa5600080fd5b6000611fb185856117b3565b92505060208301356001600160401b03811115611fd057611fd0600080fd5b6117f185828601611c64565b600080600080600060608688031215611ff757611ff7600080fd5b85356001600160401b0381111561201057612010600080fd5b61201c88828901611aa3565b955095505060208601356001600160401b0381111561203d5761203d600080fd5b61204988828901611aa3565b9350935050604061205c888289016117b3565b9150509295509295909350565b60006020828403121561207e5761207e600080fd5b60006116a3848461182b565b60006105576001600160a01b0383166120a1565b90565b6001600160a01b031690565b60006105578261208a565b6000610557826120ad565b6117fd816120b8565b6020810161055782846120c3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03821691506001600160401b0383169250826001600160401b0303821115612139576121396120f0565b500190565b60006001600160801b03821691506001600160801b0383169250826001600160801b0303821115612139576121396120f0565b6000825b925082821015612187576121876120f0565b500390565b60006001600160401b03821691506001600160401b038316612175565b60008160001904831182151516156121c3576121c36120f0565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826121ed576121ed6121c8565b500490565b60006000198203612205576122056120f0565b5060010190565b60008219821115612139576121396120f0565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061224957607f821691505b6020821081036108005761080061221f565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016105578161225b565b81835260006020840193506001600160fb1b038311156122c2576122c2600080fd5b6020830292506122d3838584611c17565b50500190565b604080825281016122eb8185876122a0565b90506116a36020830184611a7b565b600061055761209e8381565b61230f836122fa565b81546008840282811b60001990911b908116901990911617825550505050565b6000611075818484612306565b818110156123575761234f60008261232f565b60010161233c565b5050565b601f821115611075576000818152602090206020601f850104810160208510156123825750805b6110336020601f86010483018261233c565b81516001600160401b038111156123ad576123ad611b94565b6123b78254612235565b6123c282828561235b565b6020601f8311600181146123f657600084156123de5750858201515b600019600886021c198116600286021786555061244f565b600085815260208120601f198616915b828110156124265788850151825560209485019460019092019101612406565b868310156124425784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b600060ff8216610557565b6117fd81612457565b602081016105578284612462565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291505b5060400190565b6020808252810161055781612479565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150612289565b60208082528101610557816124cf565b6040810161252182856117fb565b6113a360208301846117fb565b6000815461253b81612235565b80855260208501945060018216801561255b57600181146125715761259f565b60ff19831686526020821515028601935061259f565b60008581526020902060005b838110156125995781548882015260019091019060200161257d565b87019450505b50505092915050565b604080825281016125b9818561252e565b90506113a360208301846117fb565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506124b8565b60208082528101610557816125c8565b604081016125218285611a7b565b8015156117a8565b805161055781612631565b60006020828403121561265957612659600080fd5b60006116a38484612639565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506124b8565b6020808252810161055781612665565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015291506124b8565b60208082528101610557816126bc565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150612289565b602080825281016105578161270f565b600061275d825190565b61276b818560208601611858565b9290920192915050565b60006113a3828461275356fea2646970667358221220b44ab562e165f4e926f0e764738cc66ca519c7e0a86d7dff19b8fcd58280b1c064736f6c634300080f0033'

export class Vesting__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    token_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Vesting> {
    return super.deploy(token_, owner_, overrides || {}) as Promise<Vesting>
  }
  getDeployTransaction(
    token_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(token_, owner_, overrides || {})
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting
  }
}
