/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Token, TokenInterface } from '../Token'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020016926a7a1a5902a27a5a2a760b11b8152506040518060400160405280600481526020016326aa25a760e11b815250816003908162000063919062000270565b50600462000072828262000270565b50505062000093336b033b2e3c9fd0803ce80000006200009960201b60201c565b620003b5565b6001600160a01b038216620000cb5760405162461bcd60e51b8152600401620000c29062000340565b60405180910390fd5b8060026000828254620000df919062000392565b90915550506001600160a01b038216600090815260208190526040812080548392906200010e90849062000392565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9062000153908590620003a8565b60405180910390a35b5050565b505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b600281046001821680620001a657607f821691505b602082108103620001bb57620001bb6200017b565b50919050565b6000620001d2620001cf8381565b90565b92915050565b620001e383620001c1565b815460001960089490940293841b1916921b91909117905550565b600062000160818484620001d8565b818110156200015c5762000223600082620001fe565b6001016200020d565b601f82111562000160576000818152602090206020601f85010481016020851015620002555750805b620002696020601f8601048301826200020d565b5050505050565b81516001600160401b038111156200028c576200028c62000165565b62000298825462000191565b620002a58282856200022c565b6020601f831160018114620002dc5760008415620002c35750858201515b600019600886021c198116600286021786555062000338565b600085815260208120601f198616915b828110156200030e5788850151825560209485019460019092019101620002ec565b868310156200032b5784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b60208082528101620001d281601f81527f45524332303a206d696e7420746f20746865207a65726f206164647265737300602082015260400190565b634e487b7160e01b600052601160045260246000fd5b80820180821115620001d257620001d26200037c565b81815260208101620001d2565b6109d180620003c56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011f57806370a082311461013257806395d89b411461015b578063a457c2d714610163578063a9059cbb14610176578063dd62ed3e1461018957600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd146100fd578063313ce56714610110575b600080fd5b6100b661019c565b6040516100c39190610583565b60405180910390f35b6100df6100da3660046105df565b61022e565b6040516100c39190610626565b6002545b6040516100c3919061063a565b6100df61010b366004610648565b610248565b60126040516100c391906106a1565b6100df61012d3660046105df565b61026c565b6100f06101403660046106af565b6001600160a01b031660009081526020819052604090205490565b6100b661028e565b6100df6101713660046105df565b61029d565b6100df6101843660046105df565b6102e3565b6100f06101973660046106d8565b6102f1565b6060600380546101ab90610721565b80601f01602080910402602001604051908101604052809291908181526020018280546101d790610721565b80156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b5050505050905090565b60003361023c81858561031c565b60019150505b92915050565b6000336102568582856103d0565b61026185858561041a565b506001949350505050565b60003361023c81858561027f83836102f1565b6102899190610763565b61031c565b6060600480546101ab90610721565b600033816102ab82866102f1565b9050838110156102d65760405162461bcd60e51b81526004016102cd906107bb565b60405180910390fd5b610261828686840361031c565b60003361023c81858561041a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103425760405162461bcd60e51b81526004016102cd9061080c565b6001600160a01b0382166103685760405162461bcd60e51b81526004016102cd9061085b565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103c390859061063a565b60405180910390a3505050565b60006103dc84846102f1565b9050600019811461041457818110156104075760405162461bcd60e51b81526004016102cd9061086b565b610414848484840361031c565b50505050565b6001600160a01b0383166104405760405162461bcd60e51b81526004016102cd906108e8565b6001600160a01b0382166104665760405162461bcd60e51b81526004016102cd90610938565b6001600160a01b0383166000908152602081905260409020548181101561049f5760405162461bcd60e51b81526004016102cd9061098b565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906104d6908490610763565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610520919061063a565b60405180910390a3610414565b60005b83811015610548578181015183820152602001610530565b50506000910152565b600061055b825190565b80845260208401935061057281856020860161052d565b601f01601f19169290920192915050565b602080825281016105948184610551565b9392505050565b60006001600160a01b038216610242565b6105b58161059b565b81146105c057600080fd5b50565b8035610242816105ac565b806105b5565b8035610242816105ce565b600080604083850312156105f5576105f5600080fd5b600061060185856105c3565b9250506020610612858286016105d4565b9150509250929050565b8015155b82525050565b60208101610242828461061c565b80610620565b602081016102428284610634565b60008060006060848603121561066057610660600080fd5b600061066c86866105c3565b935050602061067d868287016105c3565b925050604061068e868287016105d4565b9150509250925092565b60ff8116610620565b602081016102428284610698565b6000602082840312156106c4576106c4600080fd5b60006106d084846105c3565b949350505050565b600080604083850312156106ee576106ee600080fd5b60006106fa85856105c3565b9250506020610612858286016105c3565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061073557607f821691505b6020821081036107475761074761070b565b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102425761024261074d565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b6020808252810161024281610776565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b602082015291506107b4565b60208082528101610242816107cb565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b602082015291506107b4565b602080825281016102428161081c565b6020808252810161024281601d81527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000602082015260400190565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b602082015291506107b4565b60208082528101610242816108a6565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b602082015291506107b4565b60208082528101610242816108f8565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b602082015291506107b4565b602080825281016102428161094856fea2646970667358221220ebdae343f7f7b74530e4e8f214e0d0b37decb728d07c14b0e885e0cf6e6b1de764736f6c63430008120033'

export class Token__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Token {
    return super.attach(address) as Token
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token
  }
}
